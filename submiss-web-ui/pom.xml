<!--
  ~  Submiss, eProcurement system for managing tenders
  ~  Copyright (C) 2019 Stadt Bern
  ~  Licensed under the EUPL, Version 1.2 or - as soon as they will be approved by the European Commission - subsequent versions of the EUPL (the "Licence");
  ~  You may not use this work except in compliance with the Licence.
  ~  You may obtain a copy of the Licence at:
  ~  https://joinup.ec.europa.eu/collection/eupl
  ~  Unless required by applicable law or agreed to in writing, software distributed under the Licence is
  ~  distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~  express or implied. See the Licence for the specific language governing permissions and limitations
  ~  under the Licence.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>ch.bern.submiss</groupId>
    <artifactId>submiss</artifactId>
    <version>1.13.3</version>    <relativePath>../</relativePath>
  </parent>

  <artifactId>submiss-web-ui</artifactId>
  <packaging>pom</packaging>

  <properties>
    <sonar.sources>src</sonar.sources>
  </properties>

  <build>
    <plugins>
      <!-- Execute Gulp -->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${frontend-maven-plugin.version}</version>

        <configuration>
          <nodeVersion>${nodejs.version}</nodeVersion>
          <npmVersion>${npm.version}</npmVersion>
          <skip>false</skip>
        </configuration>

        <executions>
          <!-- Install nodejs and npm -->
          <execution>
            <id>install-nodejs-and-npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>

          <!-- Run npm install to fetch nodejs dependencies -->
          <execution>
            <id>npm-install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>

          <!-- Fetch bower dependencies -->
          <execution>
            <id>bower-install</id>
            <goals>
              <goal>bower</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>

          <!-- Execute gulp build -->
          <execution>
            <id>gulp-build</id>
            <goals>
              <goal>gulp</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Parse project version to get an OSGi-compatible version number. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
        <configuration>
          <descriptors>
            <descriptor>assembly/src.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>create-zip</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>${git-commit-id-plugin.version}</version>
        <executions>
          <execution>
            <id>git-info-gulp</id>
            <goals>
              <goal>revision</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <generateGitPropertiesFilename>${project.basedir}/src/assets/git.json</generateGitPropertiesFilename>
            </configuration>
          </execution>
          <execution>
            <id>git-info-prod</id>
            <goals>
              <goal>revision</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <generateGitPropertiesFilename>${project.basedir}/dist/scripts/git.json</generateGitPropertiesFilename>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <format>json</format>
          <includeOnlyProperties>
             <includeOnlyProperty>^git.branch$</includeOnlyProperty>
             <includeOnlyProperty>^git.build.user.name$</includeOnlyProperty>
             <includeOnlyProperty>^git.build.version$</includeOnlyProperty>
             <includeOnlyProperty>^git.commit.id$</includeOnlyProperty>
             <includeOnlyProperty>^git.dirty$</includeOnlyProperty>
          </includeOnlyProperties>
          <skipPoms>false</skipPoms>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
